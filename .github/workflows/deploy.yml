name: Deploy to Server
on:
  push:
    branches: [ main ] # change to master
    tags: ['v*.*.*']

  workflow_dispatch:
  # workflow_dispatch: # limitation: cannot access tags from another workflows
    # https://github.com/orgs/community/discussions/27028

concurrency:
  group: production
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  REPO_NAME: 'vaibhavupreti/circuitverse'

jobs:
  build-production:
    runs-on: ubuntu-latest
    environment:
      name: CircuitVerse-mrsk
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy sample database configuration
        run: cp config/database.example.yml config/database.yml

      - name: Install cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v1.7.1'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64, linux/arm64 #,linux/riscv64,linux/ppc64le,linux/s390x,linux/386,linux/mips64le,linux/mips64,linux/arm/v7,linux/arm/v6

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          file: Dockerfile.production
          context: .
          push: true
          tags: ghcr.io/vaibhavupreti/circuitverse:${{ github.sha }},ghcr.io/vaibhavupreti/circuitverse:latest
            # labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64, linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-production:
    needs: build-production
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://cv-mrsk.vaibhavupreti.me

    steps:
      - name: Check Out Code
        uses: actions/checkout@v2

      - name: Copy sample database configuration
        run: cp config/database.example.yml config/database.yml

      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set Up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.0'

      - name: Install mrsk
        run: gem install mrsk

      - name: Deploy with mrsk
        run: |
          mrsk lock release
          mrsk deploy -vvvv --skip_push
        env:
          RAILS_SERVE_STATIC_FILES: true
          AWS_S3_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          AWS_S3_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          BUGSNAG_API_KEY: ${{ secrets.BUGSNAG_API_KEY }}
          MRSK_GHCR_REGISTRY_PASSWORD: ${{ secrets.MRSK_GHCR_REGISTRY_PASSWORD }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
          RECAPTCHA_SITE_KEY: ${{ secrets.RECAPTCHA_SITE_KEY }}
          RECAPTCHA_SECRET_KEY: ${{ secrets.RECAPTCHA_SECRET_KEY }}
